apiVersion: v1
data:
  admin.yaml: |
    event:
      type: admin
      rate: 500
      capacity: 1000
    admin:
      endpoint: flyteadmin:81
      insecure: true
  catalog.yaml: |
    catalog-cache:
      endpoint: datacatalog:89
      type: datacatalog
      insecure: true
  copilot.yaml: |
    plugins:
      k8s:
        co-pilot:
          name: "flyte-copilot-"
          image: "cr.flyte.org/flyteorg/flytecopilot:v0.0.15"
          start-timeout: "30s"
  core.yaml: |
    propeller:
      rawoutput-prefix: s3://my-s3-bucket/
      metadata-prefix: metadata/propeller
      workers: 4
      max-workflow-retries: 30
      workflow-reeval-duration: 30s
      downstream-eval-duration: 30s
      limit-namespace: "all"
      prof-port: 10254
      metrics-prefix: flyte
      enable-admin-launcher: true
      leader-election:
        lock-config-map:
          name: propeller-leader
          namespace: flyte
        enabled: true
        lease-duration: 15s
        renew-deadline: 10s
        retry-period: 2s
      queue:
        type: batch
        batching-interval: 2s
        batch-size: -1
        queue:
          type: maxof
          rate: 100
          capacity: 1000
          base-delay: 5s
          max-delay: 120s
        sub-queue:
          type: bucket
          rate: 10
          capacity: 100
    webhook:
      certDir: /etc/webhook/certs
      serviceName: flyte-pod-webhook
  enabled_plugins.yaml: |
    tasks:
      task-plugins:
        enabled-plugins:
          - container
          - sidecar
          - k8s-array
        default-for-task-types:
          container: container
          sidecar: sidecar
          container_array: k8s-array
  k8s.yaml: |
    plugins:
      k8s:
        default-env-vars:
          - FLYTE_AWS_ENDPOINT: "http://minio.flyte:9000"
          - FLYTE_AWS_ACCESS_KEY_ID: minio
          - FLYTE_AWS_SECRET_ACCESS_KEY: miniostorage
        default-cpus: 100m
        default-memory: 200Mi
  logger.yaml: |
    logger:
      show-source: true
      level: 2
  resource_manager.yaml: |
    propeller:
      resourcemanager:
        type: noop
  storage.yaml: |+
    storage:
      type: minio
      connection:
        access-key: minio
        auth-type: accesskey
        secret-key: miniostorage
        disable-ssl: true
        endpoint: http://minio.flyte.svc.cluster.local:9000
        region: us-east-1
      container: "my-s3-bucket"

  task_logs.yaml: |
    plugins:
      logs:
        kubernetes-enabled: true
        kubernetes-template-uri: "http://localhost:30082/#/log/{{ .namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}"
kind: ConfigMap
metadata:
  name: flyte-propeller-config-g52db28fmc
  namespace: flyte

