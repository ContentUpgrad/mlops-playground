apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contour
  name: contour
  namespace: projectcontour
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contour
  strategy:
    rollingUpdate:
      maxSurge: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
      labels:
        app: contour
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: contour
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - serve
            - --incluster
            - --xds-address=0.0.0.0
            - --xds-port=8001
            - --envoy-service-http-port=80
            - --envoy-service-https-port=443
            - --contour-cafile=/certs/ca.crt
            - --contour-cert-file=/certs/tls.crt
            - --contour-key-file=/certs/tls.key
            - --config-path=/config/contour.yaml
          command:
            - contour
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: docker.io/projectcontour/contour:v1.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
          name: contour
          ports:
            - containerPort: 8001
              name: xds
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
            - containerPort: 6060
              name: debug
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            tcpSocket:
              port: 8001
          volumeMounts:
            - mountPath: /certs
              name: contourcert
              readOnly: true
            - mountPath: /config
              name: contour-config
              readOnly: true
      dnsPolicy: ClusterFirst
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: contour
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - configMap:
            defaultMode: 420
            items:
              - key: contour.yaml
                path: contour.yaml
            name: contour
          name: contour-config

